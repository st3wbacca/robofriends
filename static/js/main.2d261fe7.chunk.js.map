{"version":3,"sources":["actions.js","constants.js","api/api.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/Header.js","components/MainPage.js","containers/App.js","serviceWorker.js","reducers.js","index.js"],"names":["requestRobots","dispatch","type","link","fetch","then","response","ok","Error","concat","status","statusText","json","data","payload","catch","error","Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","setState","Component","Header","MainPage","filterRobots","filter","robot","toLowerCase","includes","searchField","onRequestRobots","_this$props","onSearchChange","isPending","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","App","src_components_MainPage","connect","searchRobots","event","target","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialStateSearch","initialStateRobots","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2d261fe7.chunk.js","sourcesContent":["import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\nimport { apiCall } from './api/api';\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text,\r\n});\r\n\r\nexport const requestRobots = () => dispatch => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\treturn apiCall('https://jsonplaceholder.typicode.com/users')\r\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\r\n};","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","export const apiCall = (link) => fetch(link)\r\n\t.then(response => {\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow Error(`${response.status} ${response.statusText}`);\r\n\t\t}\r\n\t\treturn response.json();\r\n\t});","import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={robots[i].id}\r\n\t\t\t\t      id={robots[i].id}\r\n\t\t\t\t      name={robots[i].name}\r\n\t\t\t\t      email={robots[i].email}\r\n\t\t\t\t  \t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n  \t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\taria-label='Search Robots'\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='searchrobots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false,\r\n\t\t};\r\n\t};\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true });\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Oops. That is not good</h1>\r\n\t\t};\r\n\r\n\t\treturn this.props.children;\r\n\t};\r\n};\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport Header from './Header';\r\n\r\nimport './MainPage.css';\r\n\r\nclass MainPage extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  };\r\n\r\n  filterRobots = () => {\r\n    return this.props.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.props.searchField.toLowerCase());\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { onSearchChange, isPending } = this.props;\r\n    \r\n    if (isPending) {\r\n      return <h1>Loading RoboFriends...</h1>\r\n    } else {\r\n      return (\r\n        <div className='tc'>\r\n          <Header />\r\n          <SearchBox searchChange={onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={this.filterRobots()} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport MainPage from '../components/MainPage';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots()),\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return(<MainPage { ...this.props } />);\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: '',\r\n};\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n}};\r\n\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: '',\r\n};\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, { isPending: true });\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false });\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, { error: action.payload, isPending: false });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n}};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\nimport { searchRobots, requestRobots } from './reducers';\r\n\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}